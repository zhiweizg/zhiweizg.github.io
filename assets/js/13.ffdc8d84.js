(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{409:function(s,t,a){"use strict";a.r(t);var n=a(56),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"vue-部分相关的面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-部分相关的面试题"}},[s._v("#")]),s._v(" Vue 部分相关的面试题")]),s._v(" "),a("p",[s._v("vue 传值‘")]),s._v(" "),a("p",[s._v("1 父 子 传值 使用 props 接受")]),s._v(" "),a("p",[s._v("2 子 父 传值 父亲写事件函数 子 $emit 触发 传值")]),s._v(" "),a("p",[s._v("3 兄弟传值 $bus 中转站")]),s._v(" "),a("p",[s._v("4 如果组件之间 关系很远 是很多组件都要用的值 "),a("strong",[s._v("vuex")])]),s._v(" "),a("p",[a("strong",[s._v("vuex")]),s._v(" "),a("strong",[s._v("就是一个全局状态数据管理")]),s._v(" 简单来说 他的数据类似全局变量 哪个组件都可以使用")]),s._v(" "),a("p",[a("strong",[s._v("在项目中使用 vuex")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("下载 vuex 包 并导入 use 一下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import Vuex from 'vuex'\nVue.use(Vuex)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("需要 new 一下 写上全局数据")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// store\nnew Vuex.Store({\n state: {\n    count:1 //这个count 就是全局的数据\n },\n mutations: {\n },\n actions: {\n }\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[s._v("需要挂载到 new vue 上")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("new Vue({\nrouter,\nstore,\nrender: h => h(App)\n}).$mount('#app')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("p",[a("strong",[s._v("这个步骤是写死的 你可以记一下 下载使用脚手架直接就可以选 vuex")])]),s._v(" "),a("p",[a("strong",[s._v("他的使用逻辑是什么？")])]),s._v(" "),a("p",[s._v("在 store 里面的 state 写的数据 是全局数据 所有组件都可以使用")]),s._v(" "),a("p",[a("strong",[s._v("使用逻辑")])]),s._v(" "),a("p",[a("strong",[s._v("操作全局 vuex 的 state 数据")])]),s._v(" "),a("p",[s._v("正常情况 必须 dispatch (action)---\x3eaction 去 commit 触发 mutation--》mutation 里面才能修改 state 全局数据")]),s._v(" "),a("p",[s._v("​ action---\x3emutation---\x3e修改 state")]),s._v(" "),a("p",[s._v("其他情况 你也可以跳过 action 去 直接 commit mutation--》修改 state 全局数据")]),s._v(" "),a("h2",{attrs:{id:"vuex-怎么合理规范管理数据-及-mutations-和-actions-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex-怎么合理规范管理数据-及-mutations-和-actions-区别"}},[s._v("#")]),s._v(" vuex 怎么合理规范管理数据,及 mutations 和 actions 区别")]),s._v(" "),a("blockquote",[a("p",[s._v("解析: 此题考查 vuex 中数据的管理和数据结构的设计,还有 mutations 和 actions 的区别")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[a("code",[s._v("解答")])]),s._v(" : 首先要明确一个特别重要的原则, 就是 不是所有的数据都要放在 vuex 中, 因为 vuex 有一句名言:假如你并不知道为什么要使用 vuex,那就不要使用它 !")]),s._v(" "),a("p",[s._v("那么什么样式的数据需要放在 vuex 中呢 ? 首先这个数据肯定要被多个组件频繁用到, 如果只是被一个组件 用到, 那完全没有任何必要为了使用 vuex 和使用 vuex")])]),s._v(" "),a("p",[s._v("举例: 一个网站用户的昵称,账号,资料,像这种系统级别的信息 随时可能在业务中展示,使用, 如果在组件中存储, 那么要获取 N 次, 所以**"),a("code",[s._v("系统级别的数据")]),s._v("**是需要放置在 vuex 中的, 那么系统级别数据 也不能所以的放置,为了让数据看着更有层级结构感,可以按照像下面这样设计,")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 系统消息")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"system"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"user"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"setting"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("上面这种结构,一看 便知道我们应该哪里获取系统数据即 设置数据")])]),s._v(" "),a("p",[s._v("如果有些业务数据,也需要共享,最好按照模块的具体业务含义分类 , 比如下面")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 系统消息")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"system"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"user"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"setting"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"product"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"productList"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 商品信息列表")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"productOrders"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 商品订单啊列表")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("blockquote",[a("p",[s._v("如上图代码所示,我们很清晰的能够分清楚 每个模块的数据,这样不会导致数据管理的混乱")])]),s._v(" "),a("h3",{attrs:{id:"mutations-和-actions-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutations-和-actions-的区别"}},[s._v("#")]),s._v(" mutations 和 actions 的区别")]),s._v(" "),a("blockquote",[a("p",[s._v("不同于 redux 只有一个 action, vuex 单独拎出了一个 mutations, 它认为 更新数据必须是同步的, 也就是只要调用了 提交数据方法, 在 mutation 里面才可以修改数据")]),s._v(" "),a("p",[s._v("那么如果我们想做 异步请求,怎么做? 这里 vuex 提供了专门做异步请求的模块,action, 当然 action 中也可以做同步操作, 只不过 分工更加明确, 所有的数据操作 不论是同步还是异步 都可以在 action 中完成,")]),s._v(" "),a("p",[s._v("mutation 只负责接收状态, 同步完成 "),a("strong",[a("code",[s._v("数据快照")])])]),s._v(" "),a("p",[s._v("所以可以认为")]),s._v(" "),a("p",[s._v("state => 负责存储状态")]),s._v(" "),a("p",[s._v("mutations => 负责同步更新状态")]),s._v(" "),a("p",[a("strong",[s._v("actions => 负责获取 处理数据（如果有异步操作必须在 action 处理 再到 mutation）")]),s._v(", 提交到 mutation 进行状态更新")])]),s._v(" "),a("h2",{attrs:{id:"vuex-模块化-module-管理-使用的时候有注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex-模块化-module-管理-使用的时候有注意事项"}},[s._v("#")]),s._v(" vuex 模块化 module 管理,使用的时候有注意事项")]),s._v(" "),a("p",[s._v("pro111")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 此题考查 当 vuex 维护的数据越来越复杂的时候, 模块化的解决方案")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(":使用单一的状态树，应用的所有状态都会**"),a("code",[s._v("集中在一个比较大的对象")]),a("strong",[s._v("上面，随着项目需求的不断增加，状态树也会变得越来越臃肿，增加了状态树维护的复杂度,而且代码变得沉长；因此我们需要")]),a("code",[s._v("modules(模块化)")]),a("strong",[s._v("来为我们的状态树")]),a("code",[s._v("分隔")]),s._v("**成不同的模块，每个模块拥有自己的 state，getters，mutations，actions；而且允许每个 module 里面嵌套子 module；如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" store\n    ├── index.js          # 我们组装模块并导出 store 的地方\n    ├── actions.js        # 根级别的 action\n    ├── mutations.js      # 根级别的 mutation\n    ├── state.js          # 根级别的 state\n    └── modules\n        ├── module1.js   # 模块1的state树\n        └── module2.js   # 模块2的state树\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("p",[s._v("上面的设计中, 每个 vuex 子模块都可以定义 state/mutations/actions")]),s._v(" "),a("blockquote",[a("p",[s._v("需要注意的是 我们原来使用**"),a("code",[s._v("vuex辅助函数")]),s._v("** mapMutations/mapActions 引入的是 全局的的 mutations 和 actions , 并且我们 vuex 子模块 也就是 module1,module2 ... 这些模块的 aciton /mutation 也注册了全局,")]),s._v(" "),a("p",[s._v("也就是如果 module1 中定义了 loginMutation, module2 中也定义了 loginMutation, 此时, mutation 就冲突了")]),s._v(" "),a("p",[s._v("如果重名,就报错了.....")]),s._v(" "),a("p",[s._v("如果不想冲突, 各个模块管理自己的 action 和 mutation ,需要 给我们的子模块一个 属性 "),a("strong",[a("code",[s._v("namespaced: true")])])])]),s._v(" "),a("p",[s._v("那么 组件中怎么使用子模块的 action 和 mutations")]),s._v(" "),a("p",[s._v("你写一遍 步骤基本是死的 熟悉就好了")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 你可以将模块的空间名称字符串作为第一个参数传递给上述函数，这样所有绑定都会自动将该模块作为上下文")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("methods")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mapMutations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'m1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'loginMutation'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//  this.$store.commit("m1/loginMutation")')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 或者下面的  先mapMutations 相当于帮你写了commit")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this.loginMutation()")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这句话的意思是 直接 解构出 全局 m1模块下的 loginMutation")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 把loginMutation 放到this上 并且帮你写好了 commit")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 相当于帮你简化了代码")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mapMutations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'m1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'loginMutation'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不是modules的直接写  ...mapMutations( ['loginMutaton])")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("blockquote",[a("p",[s._v("此题具体考查 Vuex 虽然是一个公共状态, 但是公共状态还可以切分成若干个子状态模块, 也就是 moduels,")]),s._v(" "),a("p",[s._v("解决当我们的状态树过于庞大和复杂时的一种解决方案. 但是笔者认为, 一旦用了 vuex, 几乎 就认定该项目是较为复杂的")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://vuex.vuejs.org/zh/guide/modules.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文档"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"封装-vue-组件的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装-vue-组件的步骤"}},[s._v("#")]),s._v(" 封装 Vue 组件的步骤")]),s._v(" "),a("p",[s._v("pro111")]),s._v(" "),a("p",[s._v("组件是什么？组件是一段功能代码 ---大白话 就是一段 html +js +css 你可以重复使用")]),s._v(" "),a("p",[s._v("封装轮播图 - 1 新建 vue 组件 2 Vue.component 注册组件 3 在其他组件使用 标签名")]),s._v(" "),a("p",[s._v("参数： 可以传入数据 使用 props 接受 比如 数组 定时器时间等")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 本题考查 对于 Vue 组件化开发的熟练程度")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(": 首先明确 组件是本质是什么?")]),s._v(" "),a("p",[s._v("组件就是一个单位的 HTML 结构 + 数据逻辑 + 样式的 操作单元")]),s._v(" "),a("p",[s._v("Vue 的组件 继承自 Vue 对象, Vue 对象中的所有的属性和方法,组件可自动继承.")]),s._v(" "),a("p",[s._v("组件的要素 template => 作为页面的模板结构")]),s._v(" "),a("p",[s._v("script => 作为数据及逻辑的部分")]),s._v(" "),a("p",[s._v("style => 作为该组件部分的样式部分")])]),s._v(" "),a("p",[s._v("要封装一个组件,首先要明确该组件要做的具体业务和需求, 什么样的体验特征, 完成什么样的交互, 处理什么样的数据")]),s._v(" "),a("blockquote",[a("p",[s._v("明确上述要求之后, 着手模板的结构设计及搭建,也就是 常说的 html 结构部分, 先完成 静态的 html 结构")]),s._v(" "),a("p",[s._v("结构完成, 着手数据结构的设计及开发, 数据结构一般存储于组件的 data 属性 或者 vuex 状态共享的数据结构")]),s._v(" "),a("p",[s._v("数据设计完成/ 结构完成 接下来 完成数据和模块的结合 , 利用 vuejs 中指令和 插值表达式的特性 将静态结构 "),a("strong",[a("code",[s._v("动态化")])])]),s._v(" "),a("p",[s._v("展现的部分完成, 接下来完成**"),a("code",[s._v("交互部分")]),s._v("**,即利用 组件的生命周期的钩子函数 和 事件驱动 来完成 逻辑及数据的处理与操作")])]),s._v(" "),a("p",[s._v("最后组件完成,进行测试及使用")]),s._v(" "),a("p",[s._v("常用的组件属性 => data/ methods/filters/ components/watch/created/mounted/beforeDestroy/computed/props")]),s._v(" "),a("p",[s._v("常用组件指令: v-if/v-on/v-bind/v-model/v-text/v-once")]),s._v(" "),a("h2",{attrs:{id:"vue-中的-data-是以函数的形式还是对象的形式表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-中的-data-是以函数的形式还是对象的形式表示"}},[s._v("#")]),s._v(" Vue 中的 data 是以函数的形式还是对象的形式表示")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 此题考查 data 的存在形式")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(": 我们在初步学习 Vue 实例化的时候写的代码时这个样子")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("上面代码中的 data 是一个对象, 但是我们在开发组件的时候要求 data 必须是一个带返回值的函数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("为什么组件要求必须是带返回值的函数? 因为 我们的组件在实例化的时候, 会直接将 data 数据作用在视图上,")]),s._v(" "),a("p",[s._v("对组件实例化, 会导致我们组件的 data 数据进行共享, 好比 现在有两辆新车, 你一踩油门, 不光你的车往前车,另辆车也和你一样往前冲! 这显然不符合我们的程序设计要求, 我们希望组件内部的数据是相互独立的,且互不响应,所以 采用 "),a("strong",[a("code",[s._v("return {}")])]),s._v(" 每个组件实例都返回新对象实例的形式,保证每个组件实例的唯一性")])]),s._v(" "),a("h2",{attrs:{id:"使用-proxy-代理跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-proxy-代理跨域"}},[s._v("#")]),s._v(" 使用 Proxy 代理跨域")]),s._v(" "),a("p",[s._v("pro111")]),s._v(" "),a("p",[s._v("什么是跨域？")]),s._v(" "),a("p",[s._v("域名 协议 ip 地址 端口 任何一个不一样 就跨域")]),s._v(" "),a("p",[s._v("解决跨域？")]),s._v(" "),a("p",[s._v("1 jsonp ---使用 script 的 src 发送 只能 get 请求")]),s._v(" "),a("p",[s._v("2 cors 后台设置允许跨域 "),a("strong",[s._v("需要后台设置")]),s._v(" 允许跨域")]),s._v(" "),a("p",[s._v("​ 所有后台语言 都可以设置")]),s._v(" "),a("p",[s._v("3 服务器代理")]),s._v(" "),a("p",[a("strong",[s._v("重点 现在 前端 vue 框架 是可以自己设置 服务器代理的")]),s._v(" proxy")]),s._v(" "),a("p",[s._v("​ "),a("strong",[s._v("配置就行")])]),s._v(" "),a("p",[a("strong",[s._v("vue 在 vue.config.js 可以配置重写 webpack")])]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 本题考查如何解决跨域问题")]),s._v(" "),a("p",[s._v("解析: 解决跨域问题的方式有几种,")]),s._v(" "),a("p",[a("strong",[s._v("1 一种是服务端设置")]),s._v(" , 但这种方式依赖服务端的设置,在前后分离的场景下 ,不太方便")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Access-Control-Allow-Origin：*\nAccess-Control-Allow-Methods："POST, GET, OPTIONS, DELETE"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("2 还有一种 jsonp 形式")]),s._v(", 可以利用 script 标签 的特性解决同源策略带来的跨域问题,但这是这种方案对于请求的类型有限制,只能 get")]),s._v(" "),a("p",[a("strong",[s._v("3 还有一种就可以在开发环境(本地调试)期间,进行代理")]),s._v(", 说白了 就是通过 在本地通过 nodejs 启动一个微型服务,")]),s._v(" "),a("p",[s._v("然后我们先请求我们的微型服务, 微型服务是服务端, 服务端**"),a("code",[s._v("代我们")]),a("strong",[s._v("去请求我们想要的跨域地址, 因为服务端是不受")]),a("code",[s._v("同源策略")]),s._v("**的限制的, 具体到开发中,打包工具 webpack 集成了代理的功能,可以采用配置 webpack 的方式进行解决, 但是这种仅限于 本地开发期间, "),a("strong",[s._v("等项目上线时,还是需要另择代理 nginx")])])]),s._v(" "),a("p",[s._v("以下为 webpack 配置代理的配置")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vue.config.js")]),s._v("\nmodule.exports = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 修改的配置")]),s._v("\n  devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          '/api'"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//122.51.238.153',")]),s._v("\n              changeOrigin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n              pathRewrite"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                '^/api'"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ''\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("target")])]),s._v("：接口域名；")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("changeOrigin")])]),s._v("： 如果设置为"),a("code",[s._v("true")]),s._v(",那么本地会虚拟一个服务端接收你的请求并代你发送该请求；")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("pathRewrite")])]),s._v("：如果接口中是没有 api 的，那就直接置空（如上）如果接口中有 api，就需要写成{‘^/api’:‘’}")]),s._v(" "),a("p",[a("strong",[s._v("上线了如果还有跨域 可以让后台设置 允许跨域")])]),s._v(" "),a("h2",{attrs:{id:"vue-中的-watch-如何深度监听某个对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-中的-watch-如何深度监听某个对象"}},[s._v("#")]),s._v(" Vue 中的 watch 如何深度监听某个对象")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 此题考查 Vue 的选项 watch 的应用方式")]),s._v(" "),a("p",[s._v("解析: watch 最基本的用法是")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("newValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("上面代码中: 有个原则监听谁,写谁的名字,然后是对应的执行函数, 第一个参数为最新的改变值,第二个值为上一次改变的值, 注意: 除了监听 data,也可以监听**"),a("code",[s._v("计算属性")]),s._v("** 或者一个 函数的计算结果")]),s._v(" "),a("p",[s._v("那怎么深度监听对象 ,两种方式")]),s._v(" "),a("ol",[a("li",[s._v("字符串嵌套方式")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v("'a.b.c'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("newValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("启用深度监听方式")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("data")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                   "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),s._v("\n               "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("deep")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// deep 为true  意味着开启了深度监听 a对象里面任何数据变化都会触发handler函数,")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// handler是一个固定写法")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])])])]),s._v(" "),a("h2",{attrs:{id:"vue-keep-alive-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-keep-alive-使用"}},[s._v("#")]),s._v(" Vue keep-alive 使用")]),s._v(" "),a("p",[s._v("pro111")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 此题考查 Vue 中组件缓存的使用")]),s._v(" "),a("p",[s._v("解析: keep-alive 是 Vue 提供的一个全局组件, Vue 的组件是有销毁机制的,比如条件渲染, 路由跳转时 组件都会经历**"),a("code",[s._v("销毁")]),s._v("**, 再次回到页面时,又会回到 "),a("strong",[a("code",[s._v("重生")])]),s._v(", 这一过程保证了生命周期钩子函数各个过程都会在这一生命周期中执行.")]),s._v(" "),a("p",[s._v("但是,我们辛辛苦苦获取的数据 滑动的页面 会因为组件的销毁 重生 而 "),a("strong",[a("code",[s._v("归零")])]),s._v(",这影响了交互的体验, 所以 keep-alvie 出现了, 可以帮助我们缓存想要缓存的组件实例, 只用用 keep-alive **"),a("code",[s._v("包裹")]),s._v("**你想要缓存的组件实例, 这个时候, 组件创建之后,就不会再进行 销毁, 组件数据和状态得以保存")]),s._v(" "),a("p",[s._v("但是,没有了销毁,也就失去了重生的环节, 我们失去了 原有的钩子函数, 所以 keep-alive 包裹的组件 都获取了另外"),a("strong",[s._v("两个事件 --如果缓存组件需要重新获取数据")])]),s._v(" "),a("p",[s._v("唤醒 activated 重新唤醒休眠组件实例时 执行")]),s._v(" "),a("p",[s._v("休眠 deactivated 组件实例进入休眠状态时执行")])]),s._v(" "),a("p",[s._v("但是我们不能缓存所有的组件实例, 如果是针对 组件容器 router-view 这个组件进行的缓存, 一般的策略是在路由的元信息 meta 对象中设置是否缓存的标记, 然后根据标记决定是否进行缓存")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("keep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 里面是当需要缓存时 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("view  v"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$route.meta.isAlive"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("keep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 外面是不需要缓存时 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("view  v"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!$route.meta.isAlive"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("还有需要注意的问题是: 被缓存的组件中如果还有子组件, 那么子组件也会一并拥有 激活和唤醒事件,并且这些事件会在同时执行")]),s._v(" "),a("h2",{attrs:{id:"vue-的双向数据绑定原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-的双向数据绑定原理是什么"}},[s._v("#")]),s._v(" vue 的双向数据绑定原理是什么")]),s._v(" "),a("p",[s._v("pro111")]),s._v(" "),a("blockquote",[a("p",[s._v("分析 :此题考查 Vue 的 MVVM 原理")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解答")])]),s._v(": Vue 的双向绑定原理其实就是 MVVM 的实现原理, Vuejs 官网已经说明, 实际就是通过 Object.defineProperty 方法 完成了对于 Vue 实例中数据的 "),a("strong",[a("code",[s._v("劫持")])]),s._v(", 通过对于 data 中数据 set 的监听,")]),s._v(" "),a("p",[s._v("然后通过**"),a("code",[s._v("观察者模式")]),s._v("**, 通知 对应的绑定节点 进行节点数据更新, 完成数据驱动视图的更新")]),s._v(" "),a("p",[s._v("同理, 通过对于节点的表单值改变事件的监听, 执行对于数据的修改")])]),s._v(" "),a("p",[s._v("简单概述 : 通过 Object.defineProperty 完成对于数据的劫持, 通过观察者模式, 完成对于节点的数据更新")]),s._v(" "),a("h2",{attrs:{id:"页面刷新了之后-vuex-中的数据消失怎么解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面刷新了之后-vuex-中的数据消失怎么解决"}},[s._v("#")]),s._v(" 页面刷新了之后 vuex 中的数据消失怎么解决")]),s._v(" "),a("blockquote",[a("p",[s._v("分析:此题考查 如果将 vuex 数据进行本地持久化")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(": vuex 数据位于内存, 页面的刷新重置会导致数据的**"),a("code",[s._v("归零")]),s._v("**,也就是所谓的消失, 本地持久化可以解决这个问题.本地持久化用到的技术也就是 本次存储 sesstionStorage 或者 localStorage ,")]),s._v(" "),a("p",[s._v("如果需要保持的更长久 ,浏览器关掉 再打开依然存有数据,需要使用后者")]),s._v(" "),a("p",[s._v("实施方案: state 的持久化 也就是分别需要在 state 数据初始化 /更新 的时候 进行读取和设置本地存储操作")]),s._v(" "),a("p",[s._v("代码如下")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("state")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("user")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" localStorge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化时读取 本地存储")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("mutations")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user\n      localStoregae"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数据更新时 设置本地存储")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])]),s._v(" "),a("h2",{attrs:{id:"vue-做服务端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-做服务端渲染"}},[s._v("#")]),s._v(" vue 做服务端渲染")]),s._v(" "),a("p",[s._v("pronuxt")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zh.nuxtjs.org/guide/installation/",target:"_blank",rel:"noopener noreferrer"}},[s._v("nuxt 官网文档"),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 为什么要做服务端渲染, 首先要明白 服务端渲染解决什么问题")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(": vuejs 官网说的很明白, 要做服务端渲染首先必须是有对应的需求,即对 实时到达时间(页面访问时间)的绝对需求. 如果只是简单的一个管理系统, 区区几百毫秒的优化 显得十分小题大做.")]),s._v(" "),a("p",[s._v("服务端渲染这里 有一个成熟优秀的框架 nuxt.js , 正如 next.js 对于 react,nuxt 是 vue 服务端渲染的优秀解决方案")])]),s._v(" "),a("blockquote",[a("p",[s._v("nuxt 的出现可以让渲染内容完全服务端化,解决 seo 不够友好, 首屏渲染速度不够迅速的问题,")]),s._v(" "),a("p",[s._v("但是这里需要注意: 并不是所有页面都需要服务端渲染, 因为服务端渲染比重多大 对于服务器的访问处理能力 要求也会急剧增大")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("步骤\n  1 脚手架 npx create-nuxt-app <项目名>\n  2 yarn dev 启动开发\n\n  上线\n  yarn build\n  yarn start\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h5",{attrs:{id:"为什么使用-nuxt-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用-nuxt-js"}},[s._v("#")]),s._v(" 为什么使用 nuxt.js?")]),s._v(" "),a("p",[s._v("vue 单页面应用渲染是从服务器获取所需 js，在客户端将其解析生成 html 挂载于\nid 为 app 的 DOM 元素上，这样会存在两大问题。")]),s._v(" "),a("ol",[a("li",[s._v("由于资源请求量大，造成网站首屏加载缓慢，不利于用户体验。")]),s._v(" "),a("li",[s._v("由于页面内容通过 js 插入，对于内容性网站来说，搜索引擎无法抓取网站内容，不利于 SEO。\nNuxt.js 是一个基于 Vue.js 的通用应用框架，预设了利用 Vue.js 开发服务端渲染的应用所需要的各种配置。可以将 html 在服务端渲染，合成完整的 html 文件再输出到浏览器。")])]),s._v(" "),a("p",[a("strong",[s._v("除此之外，nuxt 与 vue 还有一些其他方面的区别。")])]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("路由")]),s._v("\nnuxt 按照 pages 文件夹的目录结构自动生成路由\nvue 需在 src/router/index.js 手动配置路由")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("入口页面")]),s._v("\nnuxt 页面入口为 layouts/default.vue\nvue 页面入口为 src/App.vue")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("webpack 配置")]),s._v("\nnuxt 内置 webpack，允许根据服务端需求，在 nuxt.config.js 中的 build 属性自定义构建 webpack 的配置，覆盖默认配置\nvue 关于 webpack 的配置存放在 build 文件夹下")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("asyncData 里面发送 ajax 这个东西跟生命周期这些都是平级的")])])])]),s._v(" "),a("p",[s._v("要理解 asyncData 方法执行时，其实是在服务端完成的，这个数据是在服务端渲染好了的")]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("unxtjs的ajax，你先别往你那个异步上去思考，其实这里面所有的ajax最后都会形成页面。你别想着，我一点按钮，调用一个方法，然后再ajax去加载数据。因为我们最后全部都会生成静态，所以任何的获取数据的操作，最后都会变成页面的跳转。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("所以，官方给了一套写法，你必须按照这个去写，\n并且这里的 ajax 会再页面渲染之前就执行。这个东西跟生命周期这些都是平级的。")]),s._v(" "),a("p",[s._v("1 cnpm install @nuxtjs/axios --save\n2 .plugins 目录新建 axios.js")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import * as axios from 'axios'\n\nlet options ={}\n\n//需要全路径才能工作\n\nif(process.server){\n\n　　options.baseURL=http://${process.env.HOST || 'localhost'}:${process.env.PORT || 3000}/api\n\n}\n\nexport default axios.create(options)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("3.Nuxt.config.js 增加 axios 配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("modules:[\n\n　　'@nuxtjs/axios'\n\n],\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("4 使用 asyncData 里面发送 ajax 这个东西跟生命周期这些都是平级的 在页面渲染之前")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default {\n\n  async asyncData({app}){\n\n　　        let res =await app.$axios({\n\n              　　headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n              　　method: 'get',\n              　　url: `http://test.yms.cn/testjson.asp`,\n              　　data: ''\n\n        　　})\n        // app.$axios\n        　　console.log('res',res.data)\n        　　return{\n        　      　testData:res.data.title\n        　　}\n    },\n    created(){\n      console.log('nuxt reg组件')\n\n    }\n\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("下图为关于 nuxt 的简单概述")]),s._v(" "),a("h2",{attrs:{id:"vue-router-传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-传参"}},[s._v("#")]),s._v(" vue-router 传参")]),s._v(" "),a("blockquote",[a("p",[s._v("分析:考查 vue-router 的传值方式")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(" vue-router 传值 可以通过 地址传值")]),s._v(" "),a("p",[s._v("最简单的就是 url 传值, url 传值又两种, params 和 query 参数传值")]),s._v(" "),a("p",[s._v("params 传值 是指的动态路由传值")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("{ path: '/user/:id' } // 定义一个路由参数\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("router-link")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("/user/123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n// 传值 this.$route.params.id // 取值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("query 传值,指通过?后面的拼接参数传值")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("router-link")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("/user?id=123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n// 传值 this.$route.query.id // 取值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("h2",{attrs:{id:"前端鉴权一般思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端鉴权一般思路"}},[s._v("#")]),s._v(" 前端鉴权一般思路")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 考查前后分离的鉴权思路")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解析")])]),s._v(": 首先要明白 为什么要在前端鉴权? 因为传统项目都是在后端鉴权, 然后通过进行拦截 跳转 对应操作")]),s._v(" "),a("p",[s._v("因为 我们做的并不是传统的项目,而是前后分离项目,也就是前端项目和后端服务进行了**"),a("code",[s._v("剥离")]),s._v("**, 后端没有办法用 session 来存储你任意一个前端项目域名下的身份信息, 所以 jwt 鉴权模式应运而生.")]),s._v(" "),a("p",[s._v("​ 也就是后端不再提供会话的身份存储,而是通过一个鉴权接口将用户的身份,登录时间,请求端口,协议头..等等信息 组装成一个加密的串 返给前端请求, 前端拿到了这个串,就可以认为自己登录成功")]),s._v(" "),a("p",[s._v("那么这个**"),a("code",[s._v("加密串")]),a("strong",[s._v("就成了 前端用户是否登录的成功标志, 这就是我们的 token , 那么在接下来的接口请求中,我们几乎都要携带这个加密串,因为它是")]),a("code",[s._v("唯一")]),a("strong",[s._v("能")]),a("code",[s._v("证明我们身份")]),s._v("**的信息.")]),s._v(" "),a("p",[s._v("为了方便,我们会一般在请求工具 axios(举例)的拦截器中**"),a("code",[s._v("统一注入token")]),s._v("**, 减少代码的重复")]),s._v(" "),a("p",[s._v("token 同时具有时效性,我们也需要在此时对 token 过期进行处理,一旦出现过期的请求码, 就需要进行 换取新 token 或者重新登录的解决方案")]),s._v(" "),a("p",[s._v("除此之外,我们还需要依据**"),a("code",[s._v("有无加密串")]),s._v("** 在前端对于某些页面的访问进行限制, 这个会用到我们的 Vue-Router 中的导航守卫.")]),s._v(" "),a("p",[a("strong",[s._v("vue 单页项目涉及到多角色用户权限问题，不同的角色用户拥有不同的功能权限， 不同的功能权限对应的不同的页面")])]),s._v(" "),a("p",[s._v("一开始 有一些 默认的路由")]),s._v(" "),a("p",[s._v("登录后 比如你是总经理 后台会返回给前端 总经理能看见的 路由页面地址 数组")]),s._v(" "),a("p",[s._v("前端在 router.beforeEach 路由导航守卫里面 拿到返回的地址 使用 "),a("strong",[s._v("router.addRouter")]),s._v(" 动态加上 这个项目路由就好了")]),s._v(" "),a("p",[s._v("routes= 后台返回的 符合条件的 路由数据 类似我们自己写的那个 path 等等\nthis.$router.addRoutes(routes)")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('   例子\n\n router.beforeEach((to, from, next) => {\n\n　　　　//判断user信息是否已经获取\n        if (token) {\n　　　　　　　　//根据用户的角色类型来生成对应的新路由\n            const newRouter = [{path:"/xxx" ...} ..]\n            //将新路由添加到路由中\n　　　　　　　router.addRoutes(newRouter)\n　　　　　　　　//为了正确渲染导航,将对应的新的路由添加到vuex中\n                渲染对应的侧边栏\n    }\n})\n')])])]),a("h2",{attrs:{id:"vue-数据流-和-react-数据流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-数据流-和-react-数据流"}},[s._v("#")]),s._v(" vue 数据流 和 react 数据流")]),s._v(" "),a("p",[s._v("在"),a("strong",[s._v("vue")]),s._v(" "),a("strong",[s._v("React")]),s._v("中"),a("strong",[s._v("数据流")]),s._v("向是"),a("strong",[s._v("单向")]),s._v("的，由父节点流向子节点，如果父节点的 props 发生了改变，那么 React 会递归遍历整个组件")]),s._v(" "),a("p",[a("strong",[s._v("父组件通过绑定 props 的方式，将数据传递给子组件，但是子组件自己并没有权利修改这些数据，如果要修改，只能把修改这一个行为通过 event 的方式报告给父组件，由父组件本身决定改如何处理数据。")])]),s._v(" "),a("p",[a("strong",[s._v("vue 另一个概念 v-model 双向数据 无论数据改变，或是用户操作，都能带来互相的变动，自动更新。")])]),s._v(" "),a("h2",{attrs:{id:"如何在组件中监听-vuex-的数据变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何在组件中监听-vuex-的数据变化"}},[s._v("#")]),s._v(" 如何在组件中监听 Vuex 的数据变化")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 此题考查 Vuex 的应用及 Vue 内部的监听数据变化的机制")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[a("code",[s._v("解答")])]),s._v(": 首先确定 Vuex 是为了解决什么问题而出现的 ? Vuex 是为了解决组件间状态共享而出现的一个框架.")]),s._v(" "),a("p",[s._v("其中有几个要素 是组成 Vuex 的关键, state(状态) mutations actions ,")]),s._v(" "),a("p",[s._v("state 表示 需要共享的状态数据")]),s._v(" "),a("p",[s._v("mutations 表示 更改 state 的方法集合 只能是同步更新 不能写 ajax 等异步请求")]),s._v(" "),a("p",[s._v("actions 如果需要做异步请求 可以在 actions 中发起 然后提交给 mutations mutation 再做同步更新")])]),s._v(" "),a("p",[s._v("也就是 state 负责管理状态 , mutation 负责同步更新状态 action 负责 异步获取数据 同提交给 mutation")]),s._v(" "),a("blockquote",[a("p",[s._v("所以 组件监听 Vuex 数据变化 就是 监听 Vuex 中 state 的变化,")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("第一种方案")])]),s._v(" 我们可以在组件中通过组件的 "),a("strong",[s._v("watch 方法来做")]),s._v(", 因为组件可以将 state 数据映射到 组件的计算属性上,")]),s._v(" "),a("p",[s._v("然后 监听 映射的计算属性即可 代码如下")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vuex中的state数据")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("state")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  A组件中映射 state数据到计算属性")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("computed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mapState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'count'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A组件监听 count计算属性的变化")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用本身的数据进行一下计数")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("changeCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("第二种方案")])]),s._v(" vuex 中 store 对象本身提供了**"),a("code",[s._v("watch")]),s._v("**函数 ,可以利用该函数进行监听")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("watch(fn: Function, callback: Function, options?: Object): Function")])])]),s._v(" "),a("p",[s._v("响应式地侦听 "),a("code",[s._v("fn")]),s._v(" 的返回值，当值改变时调用回调函数。"),a("code",[s._v("fn")]),s._v(" 接收 store 的 state 作为第一个参数，其 getter 作为第二个参数。最后接收一个可选的对象参数表示 Vue 的 "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#vm-watch",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("vm.$watch")]),a("OutboundLink")],1),s._v(" 方法的参数。")]),s._v(" "),a("p",[s._v("代码")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("created")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" getters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("changeCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("以上代码 均在示例有体现")])]),s._v(" "),a("h2",{attrs:{id:"vue-单页面和多页面的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-单页面和多页面的使用"}},[s._v("#")]),s._v(" Vue 单页面和多页面的使用")]),s._v(" "),a("p",[s._v("morepage")]),s._v(" "),a("p",[s._v("<>")]),s._v(" "),a("blockquote",[a("p",[s._v("分析: 首先分析,单页面应用和 多页面应用的根本区别")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("解答")])]),s._v(": 单页面即所有的模块统统置于一个 html 文件之上,切换模块,不会重新对 html 文件和资源进行再次请求,服务器不会对我们**"),a("code",[s._v("换页面")]),s._v("**的动作 产生任何反应, 所以我们感觉不到任何的刷新动作,速度和体验很畅快")]),s._v(" "),a("p",[s._v("多页面应用 即多个 html 页面 共同的使用, 可以认为一个页面即一个模块,但是不排除 多个单页应用混合到一起的组合情况 , 多页面切换一定会造成 页面资源的重新加载, 这也就意味着 如果 多页面之间切换,一定会造成很数据的**"),a("code",[s._v("重置")]),s._v("**")]),s._v(" "),a("p",[s._v("一个项目分成很多 小 vue 项目 你去其实也可以直接创建两个项目")])]),s._v(" "),a("p",[s._v("1 **新建多个页面 每个页面是一个单独的小 vue 类型 **")]),s._v(" "),a("p",[s._v("2 配置 多入口页面"),a("strong",[s._v("在 vue.config.js 里写上这些")]),s._v(" 重点是入口选择对应页面的 main.js")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//vue.config.js\nmodule.exports = {\n  pages: {\n    index: {\n      // page 的入口\n      entry: "src/views/index/main.js",\n      // 模板来源\n      template: "public/index.html",\n      // 在 dist/index.html 的输出\n      filename: "index.html",\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: "Index Page"\n    },\n    ui: {\n      // page 的入口\n      entry: "src/views/ui/main.js",\n      // 模板来源\n      template: "public/ui.html",\n      // 在 dist/ui.html 的输出\n      filename: "ui.html",\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: "ui Page"\n    }\n  }\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("3 public 写上不同的渲染的 html")]),s._v(" "),a("p",[s._v("4 main.js 不同的入口 对应上自己的 根组件和 页面元素")]),s._v(" "),a("p",[s._v("5 通过 a 标签跳转")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<div id="app">\n    ui页面啊啊啊\n    <a href="home.html">去home页面</a>\n  </div>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("img",{attrs:{src:s.$withBase("/img/aaa.png"),alt:"aaa"}})])}),[],!1,null,null,null);t.default=e.exports}}]);